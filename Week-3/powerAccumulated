(define (accumulate term op null-value a next b)
    (if (= b 0) 
	  null-value
	  (op (term a) (accumulate term op null-value a next (next b)))))
(define (id x) x)
(define (dec x) (- x 1))
(define (expt-accum a b) (accumulate id * 1 a dec b))
